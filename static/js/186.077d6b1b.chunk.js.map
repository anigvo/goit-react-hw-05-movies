{"version":3,"file":"static/js/186.077d6b1b.chunk.js","mappings":"gNAmEA,UA7DgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA4BN,EAAAA,EAAAA,WAAS,GAArC,eAAOO,EAAP,KAAeC,EAAf,KACMC,EAAU,6CAAyCX,EAAzC,2BA2BhB,OAzBAY,EAAAA,EAAAA,YAAU,WACR,GAAIP,EAAS,CASXQ,EAAAA,EAAAA,IACOF,EATS,CACdG,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAKHC,MAAK,SAAAC,GACJX,EAAWW,EAASC,KAAKC,SACzBf,GAAW,GACXI,GAAU,EACX,IACAY,OAAM,SAAAnB,GACLC,GAAS,GACTE,GAAW,GACXI,GAAU,EACX,GACJ,CACF,GAAE,CAACL,EAASM,KAGX,8BACIF,GAoBA,SAAC,IAAD,IAnBAN,GACE,8BAAE,qBAEF,8BACsB,IAAnBI,EAAQgB,QACP,uBAAG,+CAEH,SAAC,KAAD,UACGhB,EAAQiB,KAAI,SAAAC,GAAM,OACjB,UAAC,KAAD,YACE,0BAAI,WAASA,EAAOC,WACpB,uBAAID,EAAOE,YAFEF,EAAOG,GADL,SAelC,C,6WC/DKC,EAAOC,EAAAA,EAAAA,KAAH,qJAOJC,EAAOD,EAAAA,EAAAA,GAAH,iGAMJE,EAAUF,EAAAA,EAAAA,GAAH,oKAUPG,EAAWH,EAAAA,EAAAA,GAAH,6CAIRI,EAAOJ,EAAAA,EAAAA,KAAH,uGAMJK,EAAQL,EAAAA,EAAAA,MAAH,sKAOLM,EAASN,EAAAA,EAAAA,OAAH,kKAQNO,EAAMP,EAAAA,EAAAA,IAAH,qGAMHQ,EAAUR,EAAAA,EAAAA,IAAH,qFAMPS,EAAMT,EAAAA,EAAAA,IAAH,wEAKHU,EAASV,EAAAA,EAAAA,IAAH,2CAGNW,EAAcX,EAAAA,EAAAA,IAAH,yC","sources":["components/Reviews/Reviews.jsx","pages/Base.styled.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Loader from 'components/Loader/Loader';\nimport { ListBox, ListItem } from 'pages/Base.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [reviews, setReviews] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const reviewsUrl = `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US`;\n\n  useEffect(() => {\n    if (loading) {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZjBjOWZhNTA0MDcxMTlhOWY3MWZlMTUwMGRjZWUxMCIsInN1YiI6IjY0OWYwODcwNmY2YTk5MDEzYTg5ZjQwYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.CNFILj_LKfHuzNXrxVFMlOf4mJknB8NFdiCkmm6wFOY',\n        },\n      };\n      axios\n        .get(reviewsUrl, options)\n        .then(response => {\n          setReviews(response.data.results);\n          setLoading(false);\n          setLoader(false);\n        })\n        .catch(error => {\n          setError(true);\n          setLoading(false);\n          setLoader(false);\n        });\n    }\n  }, [loading, reviewsUrl]);\n\n  return (\n    <>\n      {!loader ? (\n        error ? (\n          <>Ops! Not found!</>\n        ) : (\n          <>\n            {reviews.length === 0 ? (\n              <p>We don't have any reviews for this movie.</p>\n            ) : (\n              <ListBox>\n                {reviews.map(review => (\n                  <ListItem key={review.id}>\n                    <h4>Author: {review.author}</h4>\n                    <p>{review.content}</p>\n                  </ListItem>\n                ))}\n              </ListBox>\n            )}\n          </>\n        )\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import styled from '@emotion/styled';\n\nconst Main = styled.main`\n  padding: 20px 20px;\n  font-size: 17px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  color: black;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin: 0;\n`;\nconst ListBox = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin: 0;\n  margin-top: 20px;\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nconst ListItem = styled.li`\n  list-style: none;\n`;\n\nconst Form = styled.form`\ndisplay: flex;\ntext-align: center;\nalign-items: center;\nmargin-bottom: 20px;`;\n\nconst Input = styled.input`\n  margin-right: 25px;\n  width: 300px;\n  font-size: 17px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  color: black;\n`;\nconst Button = styled.button`\n  cursor: pointer;\n  width: 80px;\n  height: auto;\n  font-size: 17px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nconst Box = styled.div`\nmargin-top: 20px;\ndisplay: flex;\nborder: 1px solid black;\npadding: 10px;\n`\nconst TextBox = styled.div`\nmargin-top: 20px;\nborder: 1px solid black;\npadding: 10px;\n`\n\nconst Img = styled.img`\nheight: auto;\nmax-width: 100%;\ndisplay: block;`\n\nconst ImgBox = styled.div`\nmargin-right: 20px;`\n\nconst TextWrapper = styled.div`\nmax-width: 1000px;`\n\nexport {\n  Main,\n  List,\n  Form,\n  Input,\n  Button,\n  Box,\n  TextBox,\n  Img,\n  ImgBox,\n  ListBox,\n  ListItem,\n  TextWrapper\n};\n"],"names":["movieId","useParams","useState","error","setError","loading","setLoading","reviews","setReviews","loader","setLoader","reviewsUrl","useEffect","axios","method","headers","accept","Authorization","then","response","data","results","catch","length","map","review","author","content","id","Main","styled","List","ListBox","ListItem","Form","Input","Button","Box","TextBox","Img","ImgBox","TextWrapper"],"sourceRoot":""}