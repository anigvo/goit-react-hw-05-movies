{"version":3,"file":"static/js/134.943a87bb.chunk.js","mappings":"6dAEMA,EAAOC,EAAAA,EAAAA,KAAH,qJAOJC,EAAOD,EAAAA,EAAAA,GAAH,iGAMJE,EAAUF,EAAAA,EAAAA,GAAH,oKAUPG,EAAWH,EAAAA,EAAAA,GAAH,6CAIRI,EAAOJ,EAAAA,EAAAA,KAAH,uGAMJK,EAAQL,EAAAA,EAAAA,MAAH,sKAOLM,EAASN,EAAAA,EAAAA,OAAH,kKAQNO,EAAMP,EAAAA,EAAAA,IAAH,qGAMHQ,EAAUR,EAAAA,EAAAA,IAAH,qFAMPS,EAAMT,EAAAA,EAAAA,IAAH,wEAKHU,EAASV,EAAAA,EAAAA,IAAH,2CAGNW,EAAcX,EAAAA,EAAAA,IAAH,yC,mHCuCjB,UArGc,WAAO,IAAD,EAClB,GAAwCY,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,EAAK,UAAGT,EAAaU,IAAI,gBAApB,QAAgC,GAErCC,GAAWxB,EAAAA,EAAAA,GAAOyB,EAAAA,GAAPzB,CAAH,oIAUd0B,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVJ,EAAJ,CAGAH,GAAU,GAUVQ,EAAAA,EAAAA,IAAA,0DAEuDL,EAFvD,uCATgB,CACdM,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOASHC,MAAK,SAAAC,GACJZ,EAASY,EAASC,KAAKC,SACvBhB,GAAU,EACX,IACAiB,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdlB,GAAU,EACX,GAvBF,CAwBF,GAAE,CAACG,IAEJ,IAUMiB,EAAgC,KAAjBvB,EAAMwB,OAE3B,OACE,UAAC,KAAD,YACE,UAAC,KAAD,CAAMC,SAdW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnB/B,EAAgB,CAAEQ,MAAOsB,EAAKE,SAASxB,MAAMyB,QAC7CH,EAAKI,OACN,EASG,WACE,SAAC,KAAD,CACEC,KAAK,OACLC,YAAY,mBACZC,KAAK,QACLJ,MAAO/B,EACPoC,SAda,SAAAV,GACnBzB,EAASyB,EAAMW,OAAON,MACvB,KAeK,SAAC,KAAD,CAAQE,KAAK,SAASK,SAAUf,EAAhC,SAA8C,cAI9CrB,GAsBA,SAAC,IAAD,IArBU,KAAVI,EACE,IAEA,SAAC,KAAD,UACoB,IAAjBF,EAAMmC,QACL,uBAAG,yCAEHnC,EAAMoC,KAAI,SAAAC,GAAI,OACZ,yBACE,SAACjC,EAAD,CACEkC,GAAI,CAAEC,SAAS,WAAD,OAAaF,EAAKG,KAChCC,MAAO,CAAEC,KAAK,iBAAD,OAAmBxC,IAFlC,SAIGmC,EAAKN,MAAQM,EAAKM,SALdN,EAAKG,GADF,QAkB3B,C","sources":["pages/Base.styled.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Main = styled.main`\n  padding: 20px 20px;\n  font-size: 17px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  color: black;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin: 0;\n`;\nconst ListBox = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin: 0;\n  margin-top: 20px;\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nconst ListItem = styled.li`\n  list-style: none;\n`;\n\nconst Form = styled.form`\ndisplay: flex;\ntext-align: center;\nalign-items: center;\nmargin-bottom: 20px;`;\n\nconst Input = styled.input`\n  margin-right: 25px;\n  width: 300px;\n  font-size: 17px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  color: black;\n`;\nconst Button = styled.button`\n  cursor: pointer;\n  width: 80px;\n  height: auto;\n  font-size: 17px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nconst Box = styled.div`\nmargin-top: 20px;\ndisplay: flex;\nborder: 1px solid black;\npadding: 10px;\n`\nconst TextBox = styled.div`\nmargin-top: 20px;\nborder: 1px solid black;\npadding: 10px;\n`\n\nconst Img = styled.img`\nheight: auto;\nmax-width: 100%;\ndisplay: block;`\n\nconst ImgBox = styled.div`\nmargin-right: 20px;`\n\nconst TextWrapper = styled.div`\nmax-width: 1000px;`\n\nexport {\n  Main,\n  List,\n  Form,\n  Input,\n  Button,\n  Box,\n  TextBox,\n  Img,\n  ImgBox,\n  ListBox,\n  ListItem,\n  TextWrapper\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport { Main, List, Form, Input, Button } from 'pages/Base.styled';\nimport styled from '@emotion/styled';\n\nconst Movie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movie, setMovie] = useState('');\n  const [loader, setLoader] = useState(false);\n  const [films, setFilms] = useState([]);\n  const query = searchParams.get('query') ?? '';\n\n  const ItemLink = styled(Link)`\n    text-decoration: none;\n    color: black;\n\n    &:hover,\n    &:focus {\n      color: blue;\n    }\n  `;\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    setLoader(true);\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZjBjOWZhNTA0MDcxMTlhOWY3MWZlMTUwMGRjZWUxMCIsInN1YiI6IjY0OWYwODcwNmY2YTk5MDEzYTg5ZjQwYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.CNFILj_LKfHuzNXrxVFMlOf4mJknB8NFdiCkmm6wFOY',\n      },\n    };\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US`,\n        options\n      )\n      .then(response => {\n        setFilms(response.data.results);\n        setLoader(false);\n      })\n      .catch(error => {\n        console.error(error);\n        setLoader(false);\n      });\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n  const handleChange = event => {\n    setMovie(event.target.value);\n  };\n\n  const buttonStatus = movie.trim() === '' ? true : false;\n\n  return (\n    <Main>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          placeholder=\"Enter movie name\"\n          name=\"query\"\n          value={movie}\n          onChange={handleChange}\n        />\n\n        <Button type=\"submit\" disabled={buttonStatus}>\n          Search\n        </Button>\n      </Form>\n      {!loader ? (\n        query === '' ? (\n          ''\n        ) : (\n          <List>\n            {films.length === 0 ? (\n              <p>Ops! Not found films with this name.</p>\n            ) : (\n              films.map(film => (\n                <li key={film.id}>\n                  <ItemLink\n                    to={{ pathname: `/movies/${film.id}` }}\n                    state={{ from: `/movies?query=${query}` }}\n                  >\n                    {film.name || film.title}\n                  </ItemLink>\n                </li>\n              ))\n            )}\n          </List>\n        )\n      ) : (\n        <Loader />\n      )}\n    </Main>\n  );\n};\n\nexport default Movie;\n"],"names":["Main","styled","List","ListBox","ListItem","Form","Input","Button","Box","TextBox","Img","ImgBox","TextWrapper","useSearchParams","searchParams","setSearchParams","useState","movie","setMovie","loader","setLoader","films","setFilms","query","get","ItemLink","Link","useEffect","axios","method","headers","accept","Authorization","then","response","data","results","catch","error","console","buttonStatus","trim","onSubmit","event","preventDefault","form","currentTarget","elements","value","reset","type","placeholder","name","onChange","target","disabled","length","map","film","to","pathname","id","state","from","title"],"sourceRoot":""}