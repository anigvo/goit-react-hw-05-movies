{"version":3,"file":"static/js/681.19726041.chunk.js","mappings":"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","sources":["pages/Base.styled.jsx","components/MovieInformation/MovieInformation.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Main = styled.main`\n  padding: 20px 20px;\n  font-size: 17px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  color: black;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin: 0;\n`;\nconst ListBox = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin: 0;\n  margin-top: 20px;\n  border: 1px solid black;\n  padding: 10px;\n`;\n\nconst ListItem = styled.li`\n  list-style: none;\n`;\n\nconst Form = styled.form`\ndisplay: flex;\ntext-align: center;\nalign-items: center;\nmargin-bottom: 20px;`;\n\nconst Input = styled.input`\n  margin-right: 25px;\n  width: 300px;\n  font-size: 17px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  color: black;\n`;\nconst Button = styled.button`\n  cursor: pointer;\n  width: 80px;\n  height: auto;\n  font-size: 17px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n`;\n\nconst Box = styled.div`\nmargin-top: 20px;\ndisplay: flex;\nborder: 1px solid black;\npadding: 10px;\n`\nconst TextBox = styled.div`\nmargin-top: 20px;\nborder: 1px solid black;\npadding: 10px;\n`\n\nconst Img = styled.img`\nheight: auto;\nmax-width: 100%;\ndisplay: block;`\n\nconst ImgBox = styled.div`\nmargin-right: 20px;`\n\nconst TextWrapper = styled.div`\nmax-width: 1000px;`\n\nexport {\n  Main,\n  List,\n  Form,\n  Input,\n  Button,\n  Box,\n  TextBox,\n  Img,\n  ImgBox,\n  ListBox,\n  ListItem,\n  TextWrapper\n};\n","import { Link, Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Loader from 'components/Loader/Loader';\nimport { Suspense } from 'react';\nimport {\n  List,\n  TextBox,\n  Box,\n  Img,\n  ImgBox,\n  TextWrapper,\n} from 'pages/Base.styled';\nimport styled from '@emotion/styled';\n\nconst MovieInformation = ({\n  filmImg,\n  filmdDate,\n  filmTitle,\n  filmVote,\n  filmOverview,\n  filmGenres,\n}) => {\n  const releaseYear = new Date(filmdDate).getFullYear();\n  const ItemLink = styled(Link)`\n    text-decoration: none;\n    color: black;\n\n    &:hover,\n    &:focus {\n      color: blue;\n    }\n  `;\n  return (\n    <>\n      <Box>\n        <ImgBox>\n          {filmImg ? (\n            <Img src={filmImg} alt={filmTitle} />\n          ) : (\n            <p>Ops, image not found</p>\n          )}\n        </ImgBox>\n\n        <TextWrapper>\n          <div>\n            <h1>\n              {filmTitle} ({releaseYear})\n            </h1>\n            <p>User score: {Math.round(filmVote * 10) + `%`}</p>\n          </div>\n          <div>\n            <h2>Overview</h2>\n            <p>{filmOverview}</p>\n          </div>\n          <div>\n            <h3>Genres</h3>\n            <List>\n              {filmGenres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </List>\n          </div>\n        </TextWrapper>\n      </Box>\n\n      <TextBox>\n        <p>Additional Information</p>\n        <List>\n          <li>\n            <ItemLink to=\"cast\">Cast</ItemLink>\n          </li>\n          <li>\n            <ItemLink to=\"reviews\">Reviews</ItemLink>\n          </li>\n        </List>\n      </TextBox>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieInformation;\n\nMovieInformation.propTypes = {\n  filmImg: PropTypes.string.isRequired,\n  filmdDate: PropTypes.string.isRequired,\n  filmTitle: PropTypes.string.isRequired,\n  filmVote: PropTypes.number.isRequired,\n  filmOverview: PropTypes.string.isRequired,\n  filmGenres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useParams, useLocation, Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MovieInformation from 'components/MovieInformation/MovieInformation';\nimport Loader from 'components/Loader/Loader';\nimport { Main, Button } from 'pages/Base.styled';\nimport styled from '@emotion/styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [filmImg, setFilmImg] = useState(``);\n  const [filmdDate, setFilmDate] = useState('');\n  const [filmTitle, setFilmTitle] = useState('');\n  const [filmVote, setFilmVote] = useState('');\n  const [filmOverview, setFilmOverview] = useState('');\n  const [filmGenres, setFilmGenres] = useState([]);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [loader, setLoader] = useState(true);\n  const responseUrl = `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`;\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const ItemLink = styled(Link)`\n    text-decoration: none;\n    color: black;\n  `;\n\n  useEffect(() => {\n    if (loading) {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZjBjOWZhNTA0MDcxMTlhOWY3MWZlMTUwMGRjZWUxMCIsInN1YiI6IjY0OWYwODcwNmY2YTk5MDEzYTg5ZjQwYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.CNFILj_LKfHuzNXrxVFMlOf4mJknB8NFdiCkmm6wFOY',\n        },\n      };\n      axios\n        .get(responseUrl, options)\n        .then(response => {\n          if (response.data.poster_path) {\n            setFilmImg(\n              `https://image.tmdb.org/t/p/w300${response.data.poster_path}`\n            );\n          } else {\n            setFilmImg(\n              `https://www.flagstaff365.com/wp-content/themes/apollo/inc/admin/assets/images/placeholder-1.png`\n            );\n          }\n          setFilmDate(response.data.release_date);\n          setFilmTitle(response.data.original_title);\n          setFilmVote(response.data.vote_average);\n          setFilmOverview(response.data.overview);\n          setFilmGenres(response.data.genres);\n          setLoading(false);\n          setLoader(false);\n        })\n        .catch(error => {\n          setError(true);\n          setLoading(false);\n          setLoader(false);\n        });\n    }\n  }, [loading, responseUrl]);\n\n  return (\n    <Main>\n      {!loader ? (\n        error ? (\n          <>Ops! Not found!</>\n        ) : (\n          <>\n            <Button>\n              <ItemLink to={backLinkHref}>Go back</ItemLink>\n            </Button>\n            <MovieInformation\n              filmImg={filmImg}\n              filmdDate={filmdDate}\n              filmTitle={filmTitle}\n              filmVote={filmVote}\n              filmOverview={filmOverview}\n              filmGenres={filmGenres}\n            />\n          </>\n        )\n      ) : (\n        <Loader />\n      )}\n    </Main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Main","styled","List","ListBox","ListItem","Form","Input","Button","Box","TextBox","Img","ImgBox","TextWrapper","filmImg","filmdDate","filmTitle","filmVote","filmOverview","filmGenres","releaseYear","Date","getFullYear","ItemLink","Link","src","alt","Math","round","map","genre","name","id","to","Suspense","fallback","Loader","movieId","useParams","useState","setFilmImg","setFilmDate","setFilmTitle","setFilmVote","setFilmOverview","setFilmGenres","error","setError","loading","setLoading","loader","setLoader","responseUrl","backLinkHref","useLocation","state","from","useEffect","axios","method","headers","accept","Authorization","then","response","data","poster_path","release_date","original_title","vote_average","overview","genres","catch"],"sourceRoot":""}