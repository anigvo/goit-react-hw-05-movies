{"version":3,"file":"static/js/134.9a57f8f1.chunk.js","mappings":"sMAiGA,UA3Fc,WAAO,IAAD,EAClB,GAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,EAAK,UAAGT,EAAaU,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVF,EAAJ,CAGAH,GAAU,GAUVM,EAAAA,EAAAA,IAAA,0DAEuDH,EAFvD,uCATgB,CACdI,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOASHC,MAAK,SAAAC,GACJV,EAASU,EAASC,KAAKC,SACvBd,GAAU,EACX,IACAe,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdhB,GAAU,EACX,GAvBF,CAwBF,GAAE,CAACG,IAEJ,IAUMe,EAAgC,KAAjBrB,EAAMsB,OAE3B,OACE,6BACE,kBAAMC,SAdW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnB7B,EAAgB,CAAEQ,MAAOoB,EAAKE,SAAStB,MAAMuB,QAC7CH,EAAKI,OACN,EASG,WACE,kBACEC,KAAK,OACLC,YAAY,mBACZC,KAAK,QACLJ,MAAO7B,EACPkC,SAda,SAAAV,GACnBvB,EAASuB,EAAMW,OAAON,MACvB,KAeK,mBAAQE,KAAK,SAASK,SAAUf,EAAhC,SAA8C,cAI9CnB,GAsBA,SAAC,IAAD,IArBU,KAAVI,EACE,IAEA,wBACoB,IAAjBF,EAAMiC,QACL,uBAAG,yCAEHjC,EAAMkC,KAAI,SAAAC,GAAI,OACZ,yBACE,SAAC,KAAD,CACEC,GAAI,CAAEC,SAAS,WAAD,OAAaF,EAAKG,KAChCC,MAAO,CAAEC,KAAK,iBAAD,OAAmBtC,IAFlC,SAIGiC,EAAKN,MAAQM,EAAKM,SALdN,EAAKG,GADF,QAkB3B,C","sources":["pages/Movies.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nconst Movie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movie, setMovie] = useState('');\n  const [loader, setLoader] = useState(false);\n  const [films, setFilms] = useState([]);\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    setLoader(true);\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkZjBjOWZhNTA0MDcxMTlhOWY3MWZlMTUwMGRjZWUxMCIsInN1YiI6IjY0OWYwODcwNmY2YTk5MDEzYTg5ZjQwYyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.CNFILj_LKfHuzNXrxVFMlOf4mJknB8NFdiCkmm6wFOY',\n      },\n    };\n\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US`,\n        options\n      )\n      .then(response => {\n        setFilms(response.data.results);\n        setLoader(false);\n      })\n      .catch(error => {\n        console.error(error);\n        setLoader(false);\n      });\n  }, [query]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n  const handleChange = event => {\n    setMovie(event.target.value);\n  };\n\n  const buttonStatus = movie.trim() === '' ? true : false;\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter movie name\"\n          name=\"query\"\n          value={movie}\n          onChange={handleChange}\n        />\n\n        <button type=\"submit\" disabled={buttonStatus}>\n          Search\n        </button>\n      </form>\n      {!loader ? (\n        query === '' ? (\n          ''\n        ) : (\n          <ul>\n            {films.length === 0 ? (\n              <p>Ops! Not found films with this name.</p>\n            ) : (\n              films.map(film => (\n                <li key={film.id}>\n                  <Link\n                    to={{ pathname: `/movies/${film.id}` }}\n                    state={{ from: `/movies?query=${query}` }}\n                  >\n                    {film.name || film.title}\n                  </Link>\n                </li>\n              ))\n            )}\n          </ul>\n        )\n      ) : (\n        <Loader />\n      )}\n    </main>\n  );\n};\n\nexport default Movie;\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","movie","setMovie","loader","setLoader","films","setFilms","query","get","useEffect","axios","method","headers","accept","Authorization","then","response","data","results","catch","error","console","buttonStatus","trim","onSubmit","event","preventDefault","form","currentTarget","elements","value","reset","type","placeholder","name","onChange","target","disabled","length","map","film","to","pathname","id","state","from","title"],"sourceRoot":""}